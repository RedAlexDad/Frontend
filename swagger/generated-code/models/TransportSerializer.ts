/* tslint:disable */
/* eslint-disable */
/**
 * Географические объекты
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransportSerializer
 */
export interface TransportSerializer {
    /**
     * 
     * @type {number}
     * @memberof TransportSerializer
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof TransportSerializer
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof TransportSerializer
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof TransportSerializer
     */
    describe?: string;
    /**
     * 
     * @type {string}
     * @memberof TransportSerializer
     */
    photo?: string;
}

/**
 * Check if a given object implements the TransportSerializer interface.
 */
export function instanceOfTransportSerializer(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TransportSerializerFromJSON(json: any): TransportSerializer {
    return TransportSerializerFromJSONTyped(json, false);
}

export function TransportSerializerFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransportSerializer {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'describe': !exists(json, 'describe') ? undefined : json['describe'],
        'photo': !exists(json, 'photo') ? undefined : json['photo'],
    };
}

export function TransportSerializerToJSON(value?: TransportSerializer | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'type': value.type,
        'describe': value.describe,
        'photo': value.photo,
    };
}

